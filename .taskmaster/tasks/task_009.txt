# Task ID: 9
# Title: Implement Department Overlay with Consistent Styling
# Status: pending
# Dependencies: 1, 3
# Priority: medium
# Description: Create a department overlay that matches card styling with the main view but uses a simplified tile grid layout.
# Details:
Implement a department overlay that:
- Uses consistent card styling with the main view
- Arranges department items in a simplified tile grid
- Dims the background org view when open to reduce distraction
- Includes smooth transitions for opening/closing
- Maintains proper spacing and alignment

Implementation approach:
```jsx
const DepartmentOverlay = ({ isOpen, department, onClose }) => {
  if (!isOpen) return null;
  
  return (
    <div className="department-overlay">
      <div className="department-overlay__backdrop" onClick={onClose}></div>
      <div className="department-overlay__content">
        <div className="department-overlay__header">
          <h2>{department.name}</h2>
          <button className="close-button" onClick={onClose}>
            <Icon name="close" />
          </button>
        </div>
        
        <div className="department-overlay__grid">
          {department.agents.map(agent => (
            <AgentCard 
              key={agent.id}
              agent={agent}
              simplified={true}
            />
          ))}
        </div>
      </div>
    </div>
  );
};

// CSS
.department-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 100;
  display: flex;
  align-items: center;
  justify-content: center;
}

.department-overlay__backdrop {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(2px);
}

.department-overlay__content {
  position: relative;
  background-color: var(--bg-surface);
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-lg);
  width: 80%;
  max-width: 1200px;
  max-height: 80vh;
  overflow-y: auto;
}

.department-overlay__grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  gap: var(--spacing-md);
  margin-top: var(--spacing-md);
}
```

# Test Strategy:
Test the overlay with various department sizes to ensure the grid layout adapts appropriately. Verify focus management when opening/closing the overlay. Test backdrop interaction to ensure it properly dims the background and responds to clicks.

# Subtasks:
## 1. Create Basic Overlay Structure with Backdrop [pending]
### Dependencies: None
### Description: Implement the foundational overlay component with proper positioning, backdrop, and z-index to ensure it appears above the main content.
### Details:
Create the DepartmentOverlay component with fixed positioning that covers the entire viewport. Implement the backdrop with semi-transparent background and blur effect. Ensure proper z-index values to maintain correct stacking context. Add the onClick handler to the backdrop for closing the overlay when clicking outside the content area.

## 2. Implement Overlay Content Container with Header [pending]
### Dependencies: 9.1
### Description: Create the content container with proper styling, scrolling behavior, and header section with department name and close button.
### Details:
Implement the overlay content container with appropriate background color, border radius, and padding. Add max-width and max-height constraints with overflow handling for scrolling. Create the header section with the department name and close button. Style the header with proper spacing and alignment. Ensure the close button is clearly visible and accessible.

## 3. Create Responsive Grid Layout for Department Items [pending]
### Dependencies: 9.2
### Description: Implement the responsive grid layout for department items using CSS Grid with appropriate spacing and alignment.
### Details:
Build the grid layout using CSS Grid with auto-fill and minmax to create a responsive tile layout. Configure appropriate gap values between grid items. Ensure the grid maintains proper alignment and spacing at various viewport sizes. Test with different numbers of items to verify the layout adapts correctly.

## 4. Implement Simplified AgentCard Component for Overlay [pending]
### Dependencies: 9.3
### Description: Create or adapt the AgentCard component to work in simplified mode for the department overlay, maintaining consistent styling with the main view.
### Details:
Modify the existing AgentCard component to accept a 'simplified' prop that renders a more compact version suitable for the overlay grid. Ensure the simplified cards maintain the same visual language and styling as the main view cards. Remove unnecessary details while preserving essential information. Maintain consistent hover states and interactions.

## 5. Add Smooth Transitions and Animation Effects [pending]
### Dependencies: 9.1, 9.2, 9.3, 9.4
### Description: Implement smooth transitions for opening and closing the overlay, including fade-in/out and scaling effects for improved user experience.
### Details:
Add CSS transitions for opacity and transform properties to create smooth fade and scale effects when opening and closing the overlay. Implement enter/exit animations using CSS keyframes or transition properties. Ensure transitions have appropriate timing (300-500ms) and easing functions for natural movement. Consider adding subtle animation to the grid items as they load for a polished effect.

